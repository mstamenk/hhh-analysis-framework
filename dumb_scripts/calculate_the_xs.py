import sympy as sp

k4, kl = sp.symbols('k4 kl')


xs_0bh3h = [0.03274,0.03624,5.243,0.09674,131.8,0.2182,0.0511,0.02567,0.1004]

xs ={'c3_19_d4_19': 131.8,
     'c3_1_d4_2'  :0.01415,
     'c3_0_d4_0'  :0.03274,
     'c3_2_d4_m1' :0.0511,
     'c3_m1_d4_m1':0.09674,
     'c3_m1p5_d4_m0p5':0.1723,
     'c3_0_d4_99' :5.243,
     'c3_4_d4_9'  :0.2182,
     'c3_1_d4_0'  :0.02567,
     'c3_m1_d4_0' :0.1004,
     'c3_0_d4_m1' :0.03624
}

expressions = (
      xs['c3_19_d4_19']*(9.06091847289793e-6*kl**4 - 4.9300725444354e-5*kl**3 - 1.28986682294749e-5*kl**2*k4 + 7.41895333895021e-5*kl**2 + 4.88255754744921e-5*kl*k4 - 2.35068699375642e-5*kl + 1.04428564804817e-7*k4**2 - 4.64741922903036e-5*k4)
    + xs['c3_1_d4_2']*(0.00181859908941073*kl**4 + 0.0612344145588463*kl**3 - 0.117052946187404*kl**2*k4 - 0.0852248165990747*kl**2 + 0.495450856752831*kl*k4 - 0.34453745664648*kl - 0.00366709259597299*k4**2 - 0.00802155837215495*k4)
    + xs['c3_0_d4_0']*(-0.0156567767640078*kl**4 + 0.296450661053703*kl**3 + 0.116113507117289*kl**2*k4 - 1.17541762393027*kl**2 - 0.943320520412559*kl*k4 + 1.28092989493571*kl - 0.00623794854805879*k4**2 + 1.4471388065482*k4) 
    + xs['c3_2_d4_m1']*(-0.00432741529694681*kl**4 + 0.134315219432959*kl**3 - 0.0348180673391588*kl**2*k4 - 0.254218287446726*kl**2 - 0.0121776760133018*kl*k4 + 0.00399143379444837*kl - 0.00120239049516266*k4**2 + 0.16843718336389*k4)
    + xs['c3_m1_d4_m1']*(0.00269506107191331*kl**4 + 0.0869752273166167*kl**3 - 0.173807100320902*kl**2*k4 - 0.32776033936777*kl**2 + 1.06104582179224*kl*k4 - 0.205596010021244*kl + 0.00556313938999517*k4**2 - 1.44911579986085*k4 + 1.0)
    + xs['c3_m1p5_d4_m0p5']*(0.00178625756289069*kl**4 - 0.128966102905578*kl**3 + 0.0878144535538641*kl**2*k4 + 0.614548792715285*kl**2 - 0.499940475718061*kl*k4 - 0.7311804061937*kl - 0.00243811458821102*k4**2 + 0.65837559557351*k4)
    + xs['c3_0_d4_99']*(3.54406639377261e-6*kl**4 - 8.23419233486239e-5*kl**3 + 3.68602946798598e-6*kl**2*k4 + 0.000190060163750484*kl**2 - 0.000133213138375878*kl*k4 + 7.52070262542428e-5*kl + 0.0001028747943406*k4**2 - 0.000159817018482608*k4)
    + xs['c3_4_d4_9']*(-0.000544382627375349*kl**4 + 0.00482523670822783*kl**3 + 0.00769645658563427*kl**2*k4 - 0.0138311282893779*kl**2 - 0.0199714878689513*kl*k4 + 0.0127645854332177*kl + 3.21431122469228e-5*k4**2 + 0.00902857694637784*k4)
    + xs['c3_1_d4_0']*(0.0142160519792486*kl**4 - 0.454703013515982*kl**3 + 0.114062909229438*kl**2*k4 + 1.2416391532208*kl**2 - 0.0810021309692927*kl*k4 - 0.0164237414582671*kl + 0.00784728450225797*k4**2 - 0.825636512988201*k4)

)




expression_0bh3h = (
      xs_0bh3h[0]*(-0.0101010101010101*k4**2 - 0.363720500196473*k4*kl**2 + 1.36372050019647*k4*kl + 0.0101010101010101*k4 - 0.0149832420312971*kl**4 + 0.726178951991313*kl**3 - 2.70993366155838*kl**2 + 1.99873795159837*kl) 
    + xs_0bh3h[1]*(0.01*k4**2 + 0.31124347826087*k4*kl**2 - 1.31124347826087*k4*kl - 0.01*k4 - 0.00498695652173902*kl**4 - 0.1588347826087*kl**3 + 0.200169565217398*kl**2 + 0.963652173913035*kl)
    + xs_0bh3h[2]*(0.000101010101010101*k4**2 - 4.01405357927074e-5*k4*kl**2 + 4.0140535792703e-5*k4*kl - 0.000101010101010101*k4 + 4.52349582784526e-6*kl**4 - 6.72815107598011e-5*kl**3 + 0.000210320597277201*kl**2 - 0.000147562582345209*kl)
    + xs_0bh3h[3]*(-1.87786979345997e-17*k4**2 - 0.236260869565218*k4*kl**2 + 1.23626086956522*k4*kl - 1.0*k4 + 0.00585507246376814*kl**4 + 0.0619420289855084*kl**3 + 0.00944927536231792*kl**2 - 1.07724637681159*kl + 1.0) 
    + xs_0bh3h[4]*(-4.5766590389016e-6*k4*kl**2 + 4.5766590389016e-6*k4*kl + 9.1533180778032e-6*kl**4 - 5.94965675057208e-5*kl**3 + 0.000118993135011442*kl**2 - 6.8649885583524e-5*kl) 
    + xs_0bh3h[5]*(7.33542888070302e-20*k4**2 + 0.00443478260869566*k4*kl**2 - 0.00443478260869566*k4*kl - 7.33542888070302e-20*k4 - 0.00053623188405797*kl**4 + 0.00765217391304345*kl**3 - 0.0236376811594202*kl**2 + 0.0165217391304347*kl) 
    + xs_0bh3h[6]*(-2.93417155228121e-19*k4**2 - 0.0391304347826087*k4*kl**2 + 0.0391304347826088*k4*kl + 2.93417155228121e-19*k4 - 0.00507246376811594*kl**4 + 0.157971014492754*kl**3 - 0.399275362318841*kl**2 + 0.246376811594203*kl) 
    + xs_0bh3h[7]*(0.0739130434782609*k4*kl**2 - 0.0739130434782609*k4*kl + 0.0188405797101449*kl**4 - 0.539130434782609*kl**3 + 1.91159420289855*kl**2 - 1.39130434782609*kl)
    + xs_0bh3h[8]*(1.87786979345997e-17*k4**2 + 0.249565217391305*k4*kl**2 - 1.24956521739131*k4*kl + 1.0*k4 + 0.000869565217391277*kl**4 - 0.255652173913045*kl**3 + 1.01130434782609*kl**2 - 0.756521739130435*kl)
)
expression_AN = 1-0.79*(kl-1)+0.10*(k4-1)+0.81*(kl-1)*(kl-1)+0.16*(kl-1)*(k4-1)+0.016*(k4-1)*(k4-1)-0.23*(kl-1)*(kl-1)*(kl-1)*(k4-1)+0.045*(kl-1)*(kl-1)*(k4-1)+0.035*(k4-1)*(k4-1)*(k4-1)*(k4-1)

expanded_expression = sp.expand(expression_AN)
print(expressions/0.032740)



# 用 kl = 1 和 k4 = 1 替换符号变量
values = [
    [20,20],
    [2,3],
    [1,1],
    [3,0],
    [0,0],
    [-0.5,0.5],
    [1,100],
    [5,10],
    [2,1],
    [0,1],
    [1,0],
    # [-13,-100],
    # [-10,-50],
    # [-4,-20],
    # [-5,-30],
    # [3,60],
    # [8,50],
    # [9,100],
    # [17,34],
    # [2,3],
    # [3,4],
    # [3,0]
]

for arr in values:
    expressions_with_values = expressions.subs({kl: arr[0], k4: arr[1]}).evalf()
    print("(%d, %d) : %f"%(arr[0], arr[1], expressions_with_values))

